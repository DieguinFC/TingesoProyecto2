server:
  port: ${PORT:8082}  # Puerto en el que se ejecutará el microservicio

spring:
  application:
    name: microservice2  # Nombre del microservicio

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}  # URL de la base de datos
    username: ${DB_USER}  # Usuario para la base de datos
    password: ${DB_PASSWORD}  # Contraseña para la base de datos
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10  # Tamaño máximo del pool de conexiones
      connection-timeout: 30000  # Timeout para la conexión

  jpa:
    hibernate:
      ddl-auto: update  # Establece el comportamiento de actualización de la base de datos
    show-sql: true  # Muestra las consultas SQL en los logs
    properties:
      hibernate.format_sql: true  # Formatea las consultas SQL para que sean legibles

  cloud:
    config:
      uri: http://config-service:8888  # Cambiado a "config-service" para Kubernetes
      name: microservice2  # Nombre del microservicio que se registrará en el servidor Config
      profile: default  # El perfil predeterminado para la configuración

eureka:
  client:
    service-url:
      defaultZone: http://eureka-service:8761/eureka/  # Cambiado a "eureka-service" para Kubernetes
  instance:
    prefer-ip-address: true
